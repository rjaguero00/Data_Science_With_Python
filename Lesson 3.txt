Aggregations

QUIZ 1 SUM

1.Find the total amount of poster_qty paper ordered in the orders table.

 SELECT SUM (poster_qty) AS poster_ords
FROM orders;

2.Find the total amount of standard_qty paper ordered in the orders table.

SELECT SUM(standard_qty) AS standard_total
FROM orders;

3.Find the total dollar amount of sales using the total_amt_usd in the orders table.

SELECT SUM(total_amt_usd) AS total
FROM orders;

4.Find the total amount for each individual order that was spent on standard and gloss paper in the orders table. This should give a dollar amount for each order in the table.

SELECT standard_amt_usd + gloss_amt_usd AS total_standard_gloss
FROM orders;

5.Though the price/standard_qty paper varies from one order to the next. I would like this ratio across all of the sales made in the orders table.

SELECT SUM(standard_amt_usd)/SUM(standard_qty) AS standard_price_per_unit
FROM orders;

QUIZ 2 MIN, MAX, and AVG

1.When was the earliest order ever placed? You only need to return the date.

SELECT MIN(occurred_at) AS last_order
FROM orders;

2.Try performing the same query as in question 1 without using an aggregation function.

SELECT occurred_at
FROM orders
ORDER BY occurred_at ASC
LIMIT 1;

3.When did the most recent (latest) web_event occur?

SELECT MAX(occurred_at) AS recent_order
FROM web_events;

4.Try to perform the result of the previous query without using an aggregation function.

SELECT occurred_at
FROM web_events
ORDER BY occurred_at DESC
LIMIT 1;

5.Find the mean (AVERAGE) amount spent per order on each paper type, as well as the mean amount of each paper type purchased per order.

SELECT AVG(standard_qty) mean_standard, AVG(gloss_qty) mean_gloss, 
           AVG(poster_qty) mean_poster, AVG(standard_amt_usd) mean_standard_usd, 
           AVG(gloss_amt_usd) mean_gloss_usd, AVG(poster_amt_usd) mean_poster_usd
FROM orders;

6.what is the MEDIAN total_usd spent on all orders? 

SELECT *
FROM (SELECT total_amt_usd
      FROM orders
      ORDER BY total_amt_usd
      LIMIT 3457) AS Table1
ORDER BY total_amt_usd DESC
LIMIT 2;